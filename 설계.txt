

			// |----------------------------------------------------|
			// |                  T1 (Full Width)                   |
			// |----------------------------------------------------|
			// |    |    |                 T2                  |    |
			// |    |----|-------------------------------------|----|
			// |    |    | C1 |                           | C2 |    |
			// |    |    |----|                           |----|    |
			// |    |    |                                     |    |
			// | L1 | L2 |           ChartArea (C0)            | R1 |
			// |    |    |                                     |    |
			// |    |    |----|                           |----|    |
			// |    |    | C3 |                           | C4 |    |
			// |    |----|-------------------------------------|----|
			// |    |    |                 B1                  |    |
			// |----------------------------------------------------|
			// |                  B2 (Full Width)                   |
			// |----------------------------------------------------|

	C0 : chartArea
	B1 : x축 tick 영역
	B2 : x축 legendLable(bottomLable)
	L1 : y축 legendLable(leftLable);
	L2 : y축 tick 영역 (yTickLable)
	T1 : title
	T2 : subtitle



procedure : 

1. contextValidator(ctx, config) : 
2. initConfig() : 
-> 2-1. merge config
3. initalize()
-> 3-1. computeSize(ctx)
-> 3-2. baseCanvas(config);
-> 3-3. saveDrawingSurface();
-> 3-4. bindEvent();

4. baseCanvas() : 
-> 4-1. drawGrid();
-> 4-2. axesLable();


5. bindEvent()
-> 5-1. Helper.resizeForResponsive(ctx);

6. resizeForResponsive()
-> 6-1. computeSize(ctx);
-> 6-2. baseCanvas(config);



제공 메서드

JChart.update() : config.data를 새로 읽어들여 새로 그린다.
JChart.getCurrentOpt() : return Object, 현재 chart에 적용된 options 값을 반환.



3가지 만들어야 할 문서
1. 코딩에 관한 문서
2. 프로세스에 관한 문서
3. 공개에 대한 문서

추후 유지보수가 진행되면서 문서와 코드가 달라지기 시작할 수 있는 것을 주의